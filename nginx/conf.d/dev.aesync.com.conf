# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name dev.aesync.com;

    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Handle HTTPS
server {
    listen 443 ssl;
    server_name dev.aesync.com;

    ssl_certificate /etc/letsencrypt/live/dev.aesync.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.aesync.com/privkey.pem;

    # Rewrite and proxy WebSocket requests to the backend
    location /ws {
        rewrite ^/ws(/.*)?$ /inference/language/ws/chat$1 break;
        proxy_pass http://192.168.0.65:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket-specific headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    # Proxy requests to /inference, /images, and /auth paths to the backend
    location ~ ^/(inference|images|auth)/ {
        proxy_pass http://192.168.0.65:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
                # WebSocket-specific headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    # Proxy all other unmatched requests to the frontend
    location / {
        proxy_pass http://192.168.0.65:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
